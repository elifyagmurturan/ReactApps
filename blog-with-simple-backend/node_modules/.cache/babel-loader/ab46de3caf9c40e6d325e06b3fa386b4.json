{"ast":null,"code":"var _jsxFileName = \"/Users/elifturan/Desktop/2021/CS/ReactApps/blog-with-simple-backend/src/post/Post.js\";\nimport React, { useContext } from 'react';\nimport { Link } from 'react-navi';\nimport { useTheme } from '../hooks';\n\nfunction Post(_ref) {\n  var id = _ref.id,\n      title = _ref.title,\n      content = _ref.content,\n      author = _ref.author,\n      _ref$short = _ref.short,\n      short = _ref$short === void 0 ? false : _ref$short;\n\n  var _useTheme = useTheme(),\n      secondaryColor = _useTheme.secondaryColor;\n\n  var processedContent = content;\n\n  if (short) {\n    if (content.length > 30) {\n      processedContent = content.substring(0, 30) + '...';\n    }\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    style: {\n      color: secondaryColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, processedContent), short && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Link, {\n    href: \"/view/\".concat(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"View full post\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Written by \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, author)));\n}\n\nexport default React.memo(Post, function (prev, next) {\n  return prev.title === next.title && prev.content === next.content && prev.author === next.author;\n});","map":{"version":3,"sources":["/Users/elifturan/Desktop/2021/CS/ReactApps/blog-with-simple-backend/src/post/Post.js"],"names":["React","useContext","Link","useTheme","Post","id","title","content","author","short","secondaryColor","processedContent","length","substring","color","memo","prev","next"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAAQC,IAAR,QAAmB,YAAnB;AACA,SAAQC,QAAR,QAAuB,UAAvB;;AAEA,SAASC,IAAT,OAA0D;AAAA,MAA1CC,EAA0C,QAA1CA,EAA0C;AAAA,MAAtCC,KAAsC,QAAtCA,KAAsC;AAAA,MAA/BC,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,wBAAdC,KAAc;AAAA,MAAdA,KAAc,2BAAR,KAAQ;;AAAA,kBAC7BN,QAAQ,EADqB;AAAA,MAChDO,cADgD,aAChDA,cADgD;;AAExD,MAAIC,gBAAgB,GAAGJ,OAAvB;;AACA,MAAGE,KAAH,EAAS;AACP,QAAGF,OAAO,CAACK,MAAR,GAAe,EAAlB,EAAqB;AACnBD,MAAAA,gBAAgB,GAAGJ,OAAO,CAACM,SAAR,CAAkB,CAAlB,EAAqB,EAArB,IAA2B,KAA9C;AACD;AACF;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAEJ;AAAT,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCJ,KAAvC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMK,gBAAN,CAFF,EAGGF,KAAK,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,kBAAWJ,EAAX,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CAJJ,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,MAAJ,CAAd,CAVF,CADF;AAcD;;AAED,eAAeR,KAAK,CAACe,IAAN,CAAWX,IAAX,EACb,UAACY,IAAD,EAAOC,IAAP;AAAA,SAAgBD,IAAI,CAACV,KAAL,KAAeW,IAAI,CAACX,KAApB,IAA6BU,IAAI,CAACT,OAAL,KAAiBU,IAAI,CAACV,OAAnD,IAA8DS,IAAI,CAACR,MAAL,KAAgBS,IAAI,CAACT,MAAnG;AAAA,CADa,CAAf","sourcesContent":["import React, { useContext } from 'react'\nimport {Link} from 'react-navi'\nimport {useTheme} from '../hooks'\n\nfunction Post ({id, title, content, author, short=false}) {\n  const { secondaryColor } = useTheme()\n  let processedContent = content\n  if(short){\n    if(content.length>30){\n      processedContent = content.substring(0, 30) + '...'\n    }\n  }\n  return (\n    <div>\n      <h3 style={{ color: secondaryColor }}>{title}</h3>\n      <div>{processedContent}</div>\n      {short &&\n        <div>\n          <br />\n          <Link href={`/view/${id}`}>View full post</Link>\n        </div>\n      }\n      <br />\n      <i>Written by <b>{author}</b></i>\n    </div>\n  )\n}\n\nexport default React.memo(Post,\n  (prev, next) => prev.title === next.title && prev.content === next.content && prev.author === next.author\n)"]},"metadata":{},"sourceType":"module"}