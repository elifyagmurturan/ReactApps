{"ast":null,"code":"import _slicedToArray from \"/Users/elifturan/Desktop/2021/CS/ReactApps/blog-with-simple-backend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elifturan/Desktop/2021/CS/ReactApps/blog-with-simple-backend/src/user/Login.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { StateContext } from '../contexts';\nimport { useResource, userResource } from 'react-request-hook';\nimport { useInput } from 'react-hookedup';\nimport { useDispatch, useAPILogin } from '../hooks';\n\nfunction useLoginEffect(user, dispatch, setLoginFailed) {\n  useEffect(function () {\n    if (user && user.data) {\n      if (user.data.length > 0) {\n        setLoginFailed(false);\n        dispatch({\n          type: 'LOGIN',\n          username: user.data[0].username\n        });\n      } else {\n        setLoginFailed(true);\n      }\n    }\n\n    if (user && user.error) {\n      setLoginFailed(true);\n    }\n  }, [dispatch, user, setLoginFailed]);\n}\n\nexport default function Login() {\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      username = _useInput.value,\n      bindUsername = _useInput.bindToInput;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginFailed = _useState2[0],\n      setLoginFailed = _useState2[1];\n\n  var _useInput2 = useInput(''),\n      password = _useInput2.value,\n      bindPassword = _useInput2.bindToInput;\n\n  var _useAPILogin = useAPILogin(),\n      _useAPILogin2 = _slicedToArray(_useAPILogin, 2),\n      user = _useAPILogin2[0],\n      login = _useAPILogin2[1];\n\n  useLoginEffect(user, dispatch, setLoginFailed);\n  useEffect(function () {\n    if (user && user.data) {\n      if (user.data.length > 0) {\n        setLoginFailed(false);\n        dispatch({\n          type: 'LOGIN',\n          username: user.data[0].username\n        });\n      } else {\n        setLoginFailed(true);\n      }\n    }\n\n    if (user && user.error) {\n      setLoginFailed(true);\n    }\n  }, [user]);\n  return React.createElement(\"form\", {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      login(username, password);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"login-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Username:\"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    value: username\n  }, bindUsername, {\n    name: \"login-username\",\n    id: \"login-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"login-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Password:\"), React.createElement(\"input\", Object.assign({\n    type: \"password\",\n    value: password\n  }, bindPassword, {\n    name: \"login-password\",\n    id: \"login-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    disabled: username.length === 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), loginFailed && React.createElement(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" Invalid username or password\"));\n}","map":{"version":3,"sources":["/Users/elifturan/Desktop/2021/CS/ReactApps/blog-with-simple-backend/src/user/Login.js"],"names":["React","useState","useContext","useEffect","StateContext","useResource","userResource","useInput","useDispatch","useAPILogin","useLoginEffect","user","dispatch","setLoginFailed","data","length","type","username","error","Login","value","bindUsername","bindToInput","loginFailed","password","bindPassword","login","e","preventDefault","color"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { StateContext } from '../contexts'\nimport {useResource, userResource} from 'react-request-hook'\nimport {useInput} from 'react-hookedup'\nimport {useDispatch, useAPILogin} from '../hooks'\n\nfunction useLoginEffect(user, dispatch, setLoginFailed){\n  useEffect(() => {\n    if(user && user.data){\n      if(user.data.length>0){\n      setLoginFailed(false)\n      dispatch({type:'LOGIN', username: user.data[0].username})\n    } else{\n      setLoginFailed(true)\n    }\n  }\n  if(user && user.error){\n    setLoginFailed(true)\n  }\n  }, [dispatch, user, setLoginFailed])\n}\nexport default function Login () {\n  const dispatch = useDispatch()\n  \n  const {value: username, bindToInput: bindUsername} = useInput('')\n  const [loginFailed, setLoginFailed] = useState(false)\n  const {value: password, bindToInput: bindPassword} = useInput('')\n\n  const [user, login] = useAPILogin()\n  useLoginEffect(user, dispatch, setLoginFailed)\n  \n  useEffect(()=> {\n    if(user && user.data){\n      if(user.data.length>0){\n        setLoginFailed(false)\n        dispatch({type:'LOGIN', username: user.data[0].username})\n      } else{\n        setLoginFailed(true)\n      }\n    }\n    if(user && user.error){\n      setLoginFailed(true)\n    }\n  }, [user])\n\n  return (\n    <form onSubmit={e => { e.preventDefault(); login(username, password) }}>\n      <label htmlFor=\"login-username\">Username:</label>\n      <input type=\"text\" value={username} {...bindUsername} name=\"login-username\" id=\"login-username\" />\n      <label htmlFor=\"login-password\">Password:</label>\n      <input type=\"password\" value={password} {...bindPassword} name=\"login-password\" id=\"login-password\" />\n      <input type=\"submit\" value=\"Login\" disabled={username.length === 0} />\n      {loginFailed && <span style={{color: 'red'}}> Invalid username or password</span>}\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}