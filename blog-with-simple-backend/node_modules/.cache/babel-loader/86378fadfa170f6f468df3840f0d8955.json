{"ast":null,"code":"import _objectSpread from \"/Users/elifturan/Desktop/2021/CS/ReactApps/blog-with-simple-backend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/elifturan/Desktop/2021/CS/ReactApps/blog-with-simple-backend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elifturan/Desktop/2021/CS/ReactApps/blog-with-simple-backend/src/post/CreatePost.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { StateContext } from '../contexts';\nimport { useResource, userResource } from 'react-request-hook';\nimport { useNavigation } from 'react-navi';\nimport { useInput } from 'react-hookedup';\nimport useUndo from 'use-undo';\nimport { useUserState, useDispatch, useAPICreatePost } from '../hooks';\nexport default function CreatePost() {\n  var user = useUserState();\n  var duspatch = useDispatch();\n\n  var _useInput = useInput(''),\n      title = _useInput.value,\n      bindTitle = _useInput.bindToInput;\n\n  var _useUndo = useUndo(''),\n      _useUndo2 = _slicedToArray(_useUndo, 2),\n      undoContent = _useUndo2[0],\n      _useUndo2$ = _useUndo2[1],\n      setContent = _useUndo2$.set,\n      undo = _useUndo2$.undo,\n      redo = _useUndo2$.redo,\n      canUndo = _useUndo2$.canUndo,\n      canRedo = _useUndo2$.canRedo;\n\n  var content = undoContent.present;\n\n  var _useAPICreatePost = useAPICreatePost(),\n      _useAPICreatePost2 = _slicedToArray(_useAPICreatePost, 2),\n      post = _useAPICreatePost2[0],\n      createPost = _useAPICreatePost2[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    if (post && post.data) {\n      dispatch(_objectSpread({\n        type: 'CREATE_POST'\n      }, post.data));\n      navigation.navigate(\"/view/\".concat(post.data.id));\n    }\n  }, [post]);\n\n  function handleCreate() {\n    createPost({\n      title: title,\n      content: content,\n      author: user\n    });\n  }\n\n  function handleContent(e) {\n    setContent(e.target.value);\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      handleCreate();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Author: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, user)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"create-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Title:\"), React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    value: title\n  }, bindTitle, {\n    name: \"create-title\",\n    id: \"create-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))), React.createElement(\"textarea\", {\n    value: content,\n    onChange: handleContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: undo,\n    disabled: !canUndo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Undo\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: redo,\n    disabled: !canRedo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Redo\"), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Create\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/elifturan/Desktop/2021/CS/ReactApps/blog-with-simple-backend/src/post/CreatePost.js"],"names":["React","useState","useContext","useEffect","StateContext","useResource","userResource","useNavigation","useInput","useUndo","useUserState","useDispatch","useAPICreatePost","CreatePost","user","duspatch","title","value","bindTitle","bindToInput","undoContent","setContent","set","undo","redo","canUndo","canRedo","content","present","post","createPost","navigation","data","dispatch","type","navigate","id","handleCreate","author","handleContent","e","target","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { StateContext } from '../contexts'\nimport {useResource, userResource} from 'react-request-hook'\nimport {useNavigation} from 'react-navi'\nimport {useInput} from 'react-hookedup'\nimport useUndo from 'use-undo'\nimport {useUserState, useDispatch, useAPICreatePost} from '../hooks'\n\nexport default function CreatePost () {\n  const user = useUserState()\n  const duspatch = useDispatch()\n  \n  const {value: title, bindToInput: bindTitle} = useInput('')\n  const [undoContent, {\n    set: setContent,\n    undo,\n    redo,\n    canUndo,\n    canRedo\n  }] = useUndo('')\n  const content = undoContent.present\n  \n  const [post, createPost] = useAPICreatePost()\n  \n  const navigation = useNavigation()\n\n  useEffect(()=> {\n    if(post && post.data){\n      dispatch({type: 'CREATE_POST', ...post.data})\n      navigation.navigate(`/view/${post.data.id}`)\n    }\n  }, [post])\n\n\n  function handleCreate () {\n    createPost({title, content, author:user})\n  }\n  function handleContent (e) {\n    setContent(e.target.value)\n  }\n\n  return (\n    <form onSubmit={e => { e.preventDefault(); handleCreate() }}>\n      <div>Author: <b>{user}</b></div>\n      <div>\n        <label htmlFor=\"create-title\">Title:</label>\n        <input type=\"text\" value={title} {...bindTitle} name=\"create-title\" id=\"create-title\" />\n      </div>\n      <textarea value={content} onChange={handleContent}/>\n      <button type=\"button\" onClick={undo} disabled={!canUndo}>Undo</button>\n      <button type=\"button\" onClick={redo} disabled={!canRedo}>Redo</button>\n      <input type=\"submit\" value=\"Create\" />\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}