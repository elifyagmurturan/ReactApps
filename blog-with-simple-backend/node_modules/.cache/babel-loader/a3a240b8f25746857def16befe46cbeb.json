{"ast":null,"code":"import _slicedToArray from \"/Users/elifturan/Desktop/2021/CS/ReactApps/blog-with-simple-backend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elifturan/Desktop/2021/CS/ReactApps/blog-with-simple-backend/src/App.js\";\nimport React, { useReducer, useEffect, useState } from 'react';\nimport PostList from './post/PostList';\nimport CreatePost from './post/CreatePost';\nimport UserBar from './user/UserBar';\nimport Header from './Header';\nimport { ThemeContext, StateContext } from './contexts';\nimport ChangeTheme from './ChangeTheme';\nimport appReducer from './reducers';\nimport { useResource } from 'react-request-hook';\nvar defaultPosts = [{\n  title: 'React Hooks',\n  content: 'The greatest thing since sliced bread!',\n  author: 'Daniel Bugl'\n}, {\n  title: 'Using React Fragments',\n  content: 'Keeping the DOM tree clean!',\n  author: 'Daniel Bugl'\n}];\nexport default function App() {\n  var _useState = useState({\n    primaryColor: 'deepskyblue',\n    secondaryColor: 'coral'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  var _useReducer = useReducer(appReducer, {\n    user: '',\n    posts: defaultPosts,\n    error: ''\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var user = state.user,\n      error = state.error;\n\n  var _useResource = useResource(function () {\n    return {\n      url: '/posts',\n      method: 'get'\n    };\n  }),\n      _useResource2 = _slicedToArray(_useResource, 2),\n      posts = _useResource2[0],\n      getPosts = _useResource2[1];\n\n  useEffect(getPosts, []);\n  useEffect(function () {\n    if (posts && posts.error) {\n      dispatch({\n        type: 'POST_ERROR'\n      });\n    }\n\n    if (posts && posts.data) {\n      dispatch({\n        type: 'FETCH_POSTS',\n        posts: posts.data\n      });\n    }\n  }, [posts]);\n  return React.createElement(StateContext.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(ThemeContext.Provider, {\n    value: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      padding: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Header, {\n    text: \"React Hooks Blog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(ChangeTheme, {\n    theme: theme,\n    setTheme: setTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(UserBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), user && React.createElement(CreatePost, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), error && React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, error), React.createElement(PostList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/elifturan/Desktop/2021/CS/ReactApps/blog-with-simple-backend/src/App.js"],"names":["React","useReducer","useEffect","useState","PostList","CreatePost","UserBar","Header","ThemeContext","StateContext","ChangeTheme","appReducer","useResource","defaultPosts","title","content","author","App","primaryColor","secondaryColor","theme","setTheme","user","posts","error","state","dispatch","url","method","getPosts","type","data","padding"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useState } from 'react'\n\nimport PostList from './post/PostList'\nimport CreatePost from './post/CreatePost'\nimport UserBar from './user/UserBar'\nimport Header from './Header'\nimport { ThemeContext, StateContext } from './contexts'\nimport ChangeTheme from './ChangeTheme'\nimport appReducer from './reducers'\nimport {useResource} from 'react-request-hook'\n\nconst defaultPosts = [\n    { title: 'React Hooks', content: 'The greatest thing since sliced bread!', author: 'Daniel Bugl' },\n    { title: 'Using React Fragments', content: 'Keeping the DOM tree clean!', author: 'Daniel Bugl' }\n]\n\nexport default function App () {\n    const [ theme, setTheme ] = useState({\n        primaryColor: 'deepskyblue',\n        secondaryColor: 'coral'\n    })\n\n    const [ state, dispatch ] = useReducer(appReducer, { user: '', posts: defaultPosts, error:'' })\n    const { user, error } = state\n    const[posts, getPosts] = useResource(() => ({\n        url: '/posts',\n        method: 'get'\n    }))\n    useEffect(getPosts, [])\n    useEffect(() => {\n        if(posts && posts.error){\n            dispatch({type: 'POST_ERROR'})\n        }\n        if(posts && posts.data){\n            dispatch({type: 'FETCH_POSTS', posts: posts.data})\n        }\n    }, [posts])\n\n    return (\n        <StateContext.Provider value={{ state, dispatch }}>\n            <ThemeContext.Provider value={theme}>\n                <div style={{ padding: 8 }}>\n                    <Header text=\"React Hooks Blog\" />\n                    <ChangeTheme theme={theme} setTheme={setTheme} />\n                    <br />\n                    <UserBar />\n                    <br />\n                    {user && <CreatePost />}\n                    <br />\n                    <hr />\n                    {error && <b>{error}</b>}\n                    <PostList />\n                </div>\n            </ThemeContext.Provider>\n        </StateContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}