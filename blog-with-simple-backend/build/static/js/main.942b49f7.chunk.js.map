{"version":3,"sources":["contexts.js","post/Post.js","post/PostList.js","post/CreatePost.js","user/Login.js","user/Logout.js","user/Register.js","user/UserBar.js","Header.js","ChangeTheme.js","reducers.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","React","createContext","state","dispatch","ThemeContext","primaryColor","secondaryColor","Post","_ref","title","content","author","useContext","react_default","a","createElement","style","color","PostList","posts","map","p","i","Fragment","key","CreatePost","_useContext","user","_useState","useState","_useState2","Object","slicedToArray","setTitle","_useState3","_useState4","setContent","onSubmit","e","preventDefault","type","htmlFor","value","onChange","evt","target","name","id","Login","username","setUsername","disabled","length","Logout","Register","password","setPassword","_useState5","_useState6","passwordRepeat","setPasswordRepeat","UserBar","Header","text","ThemeItem","theme","active","onClick","cursor","paddingLeft","fontWeight","ChangeTheme","_ref2","setTheme","_useResource","useResource","url","method","_useResource2","themes","getThemes","data","isLoading","isActive","t","useEffect","userReducer","action","postsReducer","concat","toConsumableArray","appReducer","defaultPosts","Boolean","window","location","hostname","match","axiosInstance","axis","create","baseURL","ReactDOM","render","index_es","_useReducer","useReducer","_useReducer2","document","Provider","padding","src_Header","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.942b49f7.chunk.js","sourcesContent":["import React from 'react'\n\nexport const StateContext = React.createContext({\n  state: {},\n  dispatch: () => {}\n})\n\nexport const ThemeContext = React.createContext({\n  primaryColor: 'deepskyblue',\n  secondaryColor: 'coral'\n})\n","import React, { useContext } from 'react'\nimport { ThemeContext } from '../contexts'\n\nexport default function Post ({ title, content, author }) {\n  const { secondaryColor } = useContext(ThemeContext)\n  \n  return (\n    <div>\n      <h3 style={{ color: secondaryColor }}>{title}</h3>\n      <div>{content}</div>\n      <br />\n      <i>Written by <b>{author}</b></i>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { StateContext } from '../contexts'\n\nimport Post from './Post'\n\nexport default function PostList () {\n  const { state } = useContext(StateContext)\n  const { posts } = state\n  \n  return (\n    <div>\n      {posts.map((p, i) => (\n        <React.Fragment key={'post-' + i}>\n          <Post {...p} />\n          <hr />\n        </React.Fragment>\n      ))}\n    </div>\n  )\n}\n","import React, { useState, useContext } from 'react'\nimport { StateContext } from '../contexts'\n\nexport default function CreatePost () {\n  const { state, dispatch } = useContext(StateContext)\n  const { user } = state\n\n  const [ title, setTitle ] = useState('')\n  const [ content, setContent ] = useState('')\n\n  function handleTitle (evt) {\n    setTitle(evt.target.value)\n  }\n\n  function handleContent (evt) {\n    setContent(evt.target.value)\n  }\n\n  function handleCreate () {\n    dispatch({ type: 'CREATE_POST', title, content, author: user })\n  }\n\n  return (\n    <form onSubmit={e => { e.preventDefault(); handleCreate() }}>\n      <div>Author: <b>{user}</b></div>\n      <div>\n        <label htmlFor=\"create-title\">Title:</label>\n        <input type=\"text\" value={title} onChange={handleTitle} name=\"create-title\" id=\"create-title\" />\n      </div>\n      <textarea value={content} onChange={handleContent} />\n      <input type=\"submit\" value=\"Create\" />\n    </form>\n  )\n}\n","import React, { useState, useContext } from 'react'\nimport { StateContext } from '../contexts'\n\nexport default function Login () {\n  const { dispatch } = useContext(StateContext)\n  \n  const [ username, setUsername ] = useState('')\n\n  function handleUsername (evt) {\n    setUsername(evt.target.value)\n  }\n\n  return (\n    <form onSubmit={e => { e.preventDefault(); dispatch({ type: 'LOGIN', username }) }}>\n      <label htmlFor=\"login-username\">Username:</label>\n      <input type=\"text\" value={username} onChange={handleUsername} name=\"login-username\" id=\"login-username\" />\n      <label htmlFor=\"login-password\">Password:</label>\n      <input type=\"password\" name=\"login-password\" id=\"login-password\" />\n      <input type=\"submit\" value=\"Login\" disabled={username.length === 0} />\n    </form>\n  )\n}\n","import React, { useContext } from 'react'\nimport { StateContext } from '../contexts'\n\nexport default function Logout () {\n  const { state, dispatch } = useContext(StateContext)\n  const { user } = state\n  \n  return (\n    <form onSubmit={e => { e.preventDefault(); dispatch({ type: 'LOGOUT' }) }}>\n      Logged in as: <b>{user}</b>\n      <input type=\"submit\" value=\"Logout\" />\n    </form>\n  )\n}\n","import React, { useState, useContext } from 'react'\nimport { StateContext } from '../contexts'\n\nexport default function Register () {\n    const { dispatch } = useContext(StateContext)\n    \n    const [ username, setUsername ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [ passwordRepeat, setPasswordRepeat ] = useState('')\n\n    function handleUsername (evt) {\n        setUsername(evt.target.value)\n    }\n\n    function handlePassword (evt) {\n      setPassword(evt.target.value)\n    }\n    \n    function handlePasswordRepeat (evt) {\n        setPasswordRepeat(evt.target.value)\n    }\n\n    return (\n        <form onSubmit={e => { e.preventDefault(); dispatch({ type: 'REGISTER', username }) }}>\n            <label htmlFor=\"register-username\">Username:</label>\n            <input type=\"text\" value={username} onChange={handleUsername} name=\"register-username\" id=\"register-username\" />\n            <label htmlFor=\"register-password\">Password:</label>\n            <input type=\"password\" value={password} onChange={handlePassword} name=\"register-password\" id=\"register-password\" />\n            <label htmlFor=\"register-password-repeat\">Repeat password:</label>\n            <input type=\"password\" value={passwordRepeat} onChange={handlePasswordRepeat} name=\"register-password-repeat\" id=\"register-password-repeat\" />\n            <input type=\"submit\" value=\"Register\" disabled={username.length === 0 || password.length === 0 || password !== passwordRepeat} />\n        </form>\n    )\n}\n","import React, { useContext } from 'react'\nimport { StateContext } from '../contexts'\n\nimport Login from './Login'\nimport Logout from './Logout'\nimport Register from './Register'\n\nexport default function UserBar () {\n  const { state } = useContext(StateContext)\n  const { user } = state\n\n  if (user) {\n    return <Logout />\n  } else {\n    return (\n        <React.Fragment>\n            <Login />\n            <Register />\n        </React.Fragment>\n    )\n  }\n}\n","import React, { useContext } from 'react'\nimport { ThemeContext } from './contexts'\n\nconst Header = ({ text }) => {\n  const { primaryColor } = useContext(ThemeContext)\n  return <h1 style={{ color: primaryColor }}>{text}</h1>\n}\n\nexport default Header\n","import React, { useEffect } from 'react'\nimport {useResource} from 'react-request-hook'\n\nconst THEMES = [\n  { primaryColor: 'deepskyblue', secondaryColor: 'coral' },\n  { primaryColor: 'orchid', secondaryColor: 'mediumseagreen' }\n]\n\nfunction ThemeItem ({ theme, active, onClick }) {\n  return (\n    <span onClick={onClick} style={{ cursor: 'pointer', paddingLeft: 8, fontWeight: active ? 'bold' : 'normal' }}>\n      <span style={{ color: theme.primaryColor }}>Primary</span> / <span style={{ color: theme.secondaryColor }}>Secondary</span>\n    </span>\n  )\n}\n\nexport default function ChangeTheme ({ theme, setTheme }) {\n  const [themes, getThemes] = useResource(() => ({\n    url:'/themes',\n    method: \"get\"\n  }))\n  const {data, isLoading} = themes\n  useEffect(getThemes, [])\n\n  function isActive (t) {\n    return t.primaryColor === theme.primaryColor && t.secondaryColor === theme.secondaryColor\n  }\n\n  return (\n    <div>\n      Change theme:\n      {isLoading && 'Loading Themes...'}\n      {data && data.map((t, i) =>\n        <ThemeItem key={'theme-' + i} theme={t} active={isActive(t)} onClick={() => setTheme(t)} />\n      )}\n    </div>\n  )\n}\n","function userReducer (state, action) {\n  switch (action.type) {\n      case 'LOGIN':\n      case 'REGISTER':\n          return action.username\n\n      case 'LOGOUT':\n          return ''\n\n      default:\n          return state\n  }\n}\n\nfunction postsReducer (state, action) {\n  switch (action.type) {\n      case 'CREATE_POST':\n          const newPost = { title: action.title, content: action.content, author: action.author }\n          return [ newPost, ...state ]\n\n      default:\n          return state\n  }\n}\n\nexport default function appReducer (state, action) {\n  return {\n      user: userReducer(state.user, action),\n      posts: postsReducer(state.posts, action)\n  }\n}\n","import React, { useReducer, useEffect, useState } from 'react'\n\nimport PostList from './post/PostList'\nimport CreatePost from './post/CreatePost'\nimport UserBar from './user/UserBar'\nimport Header from './Header'\nimport { ThemeContext, StateContext } from './contexts'\nimport ChangeTheme from './ChangeTheme'\nimport appReducer from './reducers'\n\nconst defaultPosts = [\n    { title: 'React Hooks', content: 'The greatest thing since sliced bread!', author: 'Daniel Bugl' },\n    { title: 'Using React Fragments', content: 'Keeping the DOM tree clean!', author: 'Daniel Bugl' }\n]\n\nexport default function App () {\n    const [ theme, setTheme ] = useState({\n        primaryColor: 'deepskyblue',\n        secondaryColor: 'coral'\n    })\n\n    const [ state, dispatch ] = useReducer(appReducer, { user: '', posts: defaultPosts })\n    const { user } = state\n    \n    useEffect(() => {\n        if (user) {\n            document.title = `${user} - React Hooks Blog`\n        } else {\n            document.title = 'React Hooks Blog'\n        }\n    }, [user])\n\n    return (\n        <StateContext.Provider value={{ state, dispatch }}>\n            <ThemeContext.Provider value={theme}>\n                <div style={{ padding: 8 }}>\n                    <Header text=\"React Hooks Blog\" />\n                    <ChangeTheme theme={theme} setTheme={setTheme} />\n                    <br />\n                    <UserBar />\n                    <br />\n                    {user && <CreatePost />}\n                    <br />\n                    <hr />\n                    <PostList />\n                </div>\n            </ThemeContext.Provider>\n        </StateContext.Provider>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport {RequestProvider} from 'react-request-hook'\nimport axis from 'axios'\n\nconst axiosInstance = axis.create({\n    baseURL: 'http://localhost:3000/api/'\n})\n\nReactDOM.render(\n    <RequestProvider value={axiosInstance}>\n        <App/>\n    </RequestProvider>,\n    document.getElementById('root')\n    )\n\nserviceWorker.unregister()\n"],"sourceRoot":""}