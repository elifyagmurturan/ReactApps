{"ast":null,"code":"import * as React from 'react';\nexport var HashScrollContext = React.createContext('auto');\nexport function HashScroll(props) {\n  if (!props.behavior) {\n    return React.createElement(React.Fragment, null, props.children);\n  }\n\n  return React.createElement(HashScrollContext.Provider, {\n    value: props.behavior\n  }, props.children);\n}\n\nfunction smoothScroll(left, top) {\n  try {\n    window.scroll({\n      top: top,\n      left: left,\n      behavior: 'smooth'\n    });\n  } catch (e) {\n    window.scroll(left, top);\n  }\n}\n\nvar behaviors = {\n  none: function none() {},\n  auto: function auto(hash) {\n    if (hash) {\n      var id = document.getElementById(hash.slice(1));\n\n      if (id) {\n        var _a = id.getBoundingClientRect(),\n            top_1 = _a.top,\n            left = _a.left;\n\n        window.scroll(left + window.pageXOffset, top_1 + window.pageYOffset);\n      }\n    } else {\n      window.scroll(0, 0);\n    }\n  },\n  smooth: function smooth(hash) {\n    if (hash) {\n      var id = document.getElementById(hash.slice(1));\n\n      if (id) {\n        var _a = id.getBoundingClientRect(),\n            top_2 = _a.top,\n            left = _a.left;\n\n        smoothScroll(left + window.pageXOffset, top_2 + window.pageYOffset); // Focus the element, as default behavior is cancelled.\n        // https://css-tricks.com/snippets/jquery/smooth-scrolling/\n\n        id.focus();\n      }\n    } else {\n      smoothScroll(0, 0);\n    }\n  }\n};\nexport function scrollToHash(hash, behavior) {\n  if (behavior === void 0) {\n    behavior = 'auto';\n  }\n\n  var fn = typeof behavior === 'string' ? behaviors[behavior] : behavior;\n  fn(hash);\n}","map":null,"metadata":{},"sourceType":"module"}